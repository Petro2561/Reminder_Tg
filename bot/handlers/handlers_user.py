from io import BytesIO
from aiogram import F, Router
from aiogram.filters import Command, StateFilter, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ContentType


from ai.chat_gpt import PROMPT_FIRST, generate_reminder_response, manage_audio
from bot.keyboards.users import get_timezone_keyboard
from bot.states import FillText, TimezoneStates
from bot.utils.utils import gpt_answer
from db.db import DBUser, Reminder, User
from db.uow import UoW

START_MESSAGE = """<b>–ü—Ä–∏–≤–µ—Ç, {name}!</b> 
ü§ñ–Ø AI-–Ω–∞–ø–æ–º–∏–Ω–∞—Ç–æ—Ä‚è∞.

–ù–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –∑–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ, –∫–æ–≥–¥–∞ –∏ –æ —á–µ–º –í–∞–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å. üéôÔ∏èüí¨

–ù–∞–ø—Ä–∏–º–µ—Ä: 
-–ó–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º –≤ 11 –Ω–∞–ø–æ–º–Ω–∏ –ø—Ä–æ –≤—Å—Ç—Ä–µ—á—É.
-–°–µ–≥–æ–¥–Ω—è –≤ 22.00 –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ—É—Ç–±–æ–ª.
-–ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 11-00 –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ—á—Ç—É.

–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º, —Ç–∞–∫ –∏ –≥–æ–ª–æ—Å–æ–º. üé§üí¨

üï∞Ô∏è –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: UTC+3.
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ /set_timezone

üí° –ñ–¥—É –≤–∞—à–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π!
"""

router = Router()

@router.message(Command("set_timezone"))
async def cmd_set_time(message: Message, state: FSMContext):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ UTC:",
        reply_markup=get_timezone_keyboard()
    )
    await state.set_state(TimezoneStates.waiting_for_timezone)

@router.message(Command("support"))
async def cmd_set_time(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ: https://t.me/petro2561",
    )
    await message.answer(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–ª–∏ –∑–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–º",
    )

@router.message(Command("start"))
async def start_command(message: Message, state: FSMContext, command: CommandObject, user: User | None = None):
    await message.bot.send_message(-1002257320033, f'{user.username}: –Ω–∞–ø–∏—Å–∞–ª {message.text}')
    await message.answer(START_MESSAGE.format(name=user.first_name), parse_mode="HTML")
    await state.set_state(state=FillText.fill_text)
    if command.args == "hh":
        await message.answer("–ü–æ-–≤–∏–¥–∏–º–æ–º—É, –≤—ã —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å. –ù–∞–¥–µ—é—Å—å, —è –ø–æ–º–æ–≥—É –º–æ–µ–º—É —Å–æ–∑–¥–∞—Ç–µ–ª—é –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É üòÄ")


@router.message(StateFilter(FillText.fill_text), F.content_type == ContentType.VOICE)
async def fill_audio(message: Message, state: FSMContext, uow: UoW, user: DBUser):
    await message.bot.send_message(-1002257320033, f'{user.username}: —á—Ç–æ-—Ç–æ –Ω–∞–≥–æ–≤–æ—Ä–∏–ª')
    file_info = await message.bot.get_file(message.voice.file_id)
    file_bytes = BytesIO()
    await message.bot.download(file_info, file_bytes)
    file_bytes.seek(0) 
    text_message = await manage_audio(file_bytes)
    await message.bot.send_message(-1002257320033, f'{user.username}: –ü–æ–ª—É—á–∏–ª —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É {text_message}')
    await message.answer(text_message)
    await gpt_answer(message=message, text_message=text_message, uow=uow, user=user)

@router.message(StateFilter(FillText.fill_text))
async def fill_text(message: Message, state: FSMContext, uow: UoW, user: DBUser):
    await message.bot.send_message(-1002257320033, f'{user.username}: –Ω–∞–ø–∏—Å–∞–ª {message.text}')
    await gpt_answer(message=message, text_message=message.text, uow=uow, user=user)

@router.callback_query(TimezoneStates.waiting_for_timezone, lambda c: c.data.startswith("set_timezone:"))
async def process_timezone_selection(callback_query: CallbackQuery, state: FSMContext, user: DBUser, uow: UoW):
    offset_str = callback_query.data.split(":")[1]
    offset = int(offset_str.replace("UTC", ""))
    user.utc_offset = offset
    await uow.commit(user)
    await callback_query.message.answer(f"–í–∞—à–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: UTC{offset:+}")
    await callback_query.message.answer(f"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –∑–∞–ø–∏—à–∏—Ç–µ –∞—É–¥–∏–æ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º")
    await state.set_state(state=FillText.fill_text)